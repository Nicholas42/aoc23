#!/bin/a68g --script #

BEGIN
  MODE VALUE = STRUCT (INT x, INT m, INT a, INT s);

  PROC check condition = (CONDITION cond, VALUE value) BOOL: BEGIN
    CHAR at := attribute OF cond;
    INT val = ( at EQ "x" | x OF value |: at EQ "a" | a OF value |: at EQ "m" | m OF value | s OF value);
    IF lesser OF cond THEN
      val < (value OF cond)
    ELSE
      val > (value OF cond)
    FI
  END;

  PROC process rule = (RULE rule, VALUE value) STRING: BEGIN
    INT index := LWB (conditions OF rule);
    WHILE
    (index <= UPB (conditions OF rule) | NOT check condition((conditions OF rule)[index], value) | FALSE)
    DO index +:= 1 OD;

    IF index <= UPB (conditions OF rule) THEN
      target OF (conditions OF rule)[index]
    ELSE
      default target OF rule
    FI
  END;

  PROC process value = ([] RULE rules, VALUE val) INT: BEGIN
    STRING target := "in";

    WHILE
      target NE "A" AND target NE "R"
    DO
      RULE rule := find rule(rules, target);
      target := process rule(rule, val)
    OD;

    IF target EQ "A" THEN
      (x OF val) + (m OF val) + (a OF val) + (s OF val)
    ELSE
      0
    FI
  END;

  PROC compute solution = (STRING input file name) INT: BEGIN
      FILE inp;
      INT opened = open(inp, input file name, stand in channel);
      BOOL finished reading := opened > 0;
      INT sum := 0;
      on logical file end (inp, (REF FILE f) BOOL: finished reading := TRUE);
      [] RULE rules = read rules(inp);
      make term(inp, "1234567890");

      WHILE
        VALUE val;
        STRING skip;
        get(inp,(skip, x OF val, skip, m OF val, skip, a OF val, skip, s OF val, newline));
        NOT finished reading
      DO
        INT result := process value(rules, val);
        sum +:= result
      OD;
      close(inp);
      sum
  END;

  PR include "common.a68" PR
END

CO
vi: commentstring=#%s# tabstop=2 expandtab shiftwidth=2
CO
