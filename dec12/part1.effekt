import immutable/list
import mutable/array
import io/async
import text/string

import common

def parseNumberList(str: String): List[Int] = {
  return str.split(",").collect { inp => inp.toInt() }.toListFixed()
}

def parseProblem(line: String): Option[Problem] = {
  val parts = line.splitL(" ")
  val ret = parts match {
    case Cons(springs, Cons(numbers, Nil())) => Some(Problem(parseSprings(springs), parseNumberList(numbers)))
    case _ => None()
  }
  return ret
}

def program() =  {
  val file = do read("input.txt")

  val input = file.block()
  val lines = input.split("\n")

  val problems = lines.collect{line => parseProblem(line)}.toListFixed()
  val result = problems.map { prob =>
    calculate(prob)
  }.sum()
  println(result)
}

def main() = {
  fork(box {
    asyncIO(box {
      program()
    })
  })

}

// vi: tabstop=2 commentstring=//%s ft=scala
